.. CPlot.Decorator documentation master file

:tocdepth: 2

CPlot.Decorator: decoration of CPlot images using matplotlib
============================================================

Preamble
########

CPlot can generate images of meshes or flow fields. Those image can be
further enhanced with any additional matplotlib items using this module. 

This module is part of Cassiopee, a free open-source pre- and post-processor for CFD simulations.

To import CPlot.Decorator module::

   import CPlot.Decorator as Decorator


.. py:module:: CPlot.Decorator


List of functions
##################

**-- Actions**

.. autosummary::

    CPlot.Decorator.createSubPlot
    CPlot.Decorator.createColorBar
    CPlot.Decorator.createText
    CPlot.Decorator.savefig
    CPlot.Decorator.show



Contents
#########

    
Actions
--------------------------


.. py:function:: CPlot.Decorator.createSubPlot(title=None, box=False)

    Create a matplotlib figure and axe from an image generated by CPlot.display.
    The returned figure and axis can be further modified with any matplotlib command.

    :param title: title of subplot
    :type title: string or None
    :param box: if True, display a box around image
    :type box: boolean    

    *Example of use:*
    
    * `Create subplot with osmesa (pyTree) <Examples/CPlot/decoratorPT.py>`_:

    .. literalinclude:: ../build/Examples/CPlot/decoratorPT.py

    * `Create subplot with openGL (pyTree) <Examples/CPlot/decorator2PT.py>`_:

    .. literalinclude:: ../build/Examples/CPlot/decorator2PT.py
    
    
--------------------------


.. py:function:: CPlot.Decorator.createColorBar(fig, ax, levels=None, title=None, cmap=None, valueFormat='%0.3f', discrete=True, fontSize=20, color="black", location="right")

    Create a colorbar on a subplot figure and axe.

    :param fig: subplot figure
    :type fig: matplotlib figure
    :param ax: subplot axis
    :type ax: matplotlib axis
    :param levels: if given, a list [no, minLevel, maxLevel] to display in colorbar. If none, levels are taken from CPlot.
    :type levels: None or list or numpy
    :param title: title of createColorBar
    :type title: string
    :param cmap: colormap name ('Blue2Red', ...). If none, cmap is taken from CPlot.
    :type cmap: None or string
    :param valueFormat: format of values in colorbar
    :type valueFormat: string
    :param discrete: if True, discrete levels else continuous levels
    :type discrete: boolean
    :param fontSize: size of font used in colorbar
    :type fontSize: int
    :param color: color used for fonts and ticks
    :type color: string
    :param location: location of colorbar in "left", "right", "top", "bottom"
    :type location: string


--------------------------


.. py:function:: CPlot.Decorator.createText(ax, posx=0, posy=0, text='', size=20, color="black", box=False, box=False, boxColor="black", boxBackColor="white")
    
    Create a text on figure.

    :param posx: position of text in x axis
    :type posx: float
    :param posy: position of text in y axis
    :type posy: float
    :param text: text to be displayed
    :type text: string
    :param size: size of text
    :type size: int
    :param color: text color
    :type color: string    
    :param box: if True, display a box around text
    :type box: boolean
    :param boxColor: box color
    :type boxColor: string
    :param boxBackColor: box background color
    :type boxBackColor: string
    

--------------------------
    
.. py:function:: CPlot.Decorator.savefig(fileName, pad=0.)
    
    Save figure in fileName. A padding space can be added.

    :param fileName: name of the file to export to
    :type fileName: string
    :param pad: padding space around image
    :type pad: float

--------------------------
    
.. py:function:: CPlot.Decorator.show()
    
    Display figure.


--------------------------


.. toctree::
   :maxdepth: 2


Index
########

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`

