#! /bin/sh
echo 'Installing Transform tests and doc'
if [ "$CASSIOPEE" = "" ]; then
    echo "You must specify a CASSIOPEE variable in your environment."
    echo "This variable specifies the installation path of *Cassiopee*."
    exit
fi

if ([ $# -eq 0 ])
then
    PRODUCTION=0
    # Destination docs
    DEST="./doc"
    # Destination tests unitaires
    DEST2="$DEST/Examples/Transform"
    # Destination des release notes
    DEST3="$DEST"
elif ([ $# -eq 2 ])
then
    PRODUCTION=1
    # Destination docs
    DEST="$CASSIOPEE/web/doc"
    # Destination tests unitaires
    DEST2="$DEST/Examples/Transform"
    # Destination des release notes
    DEST3="$CASSIOPEE/web/Download"
else
    echo 'install: install locally'
    echo 'install <dir>: install in web/doc.'
    exit
fi

# Copy examples to global dir (production mod)
if ([ $PRODUCTION -eq 1 ])
then
    if test ! -e $DEST
    then 
        mkdir $DEST
    fi
    if test ! -e "$DEST/Examples"
    then 
        mkdir "$DEST/Examples"
    fi
    if test ! -e $DEST2
    then 
        mkdir $DEST2
    fi
    if test ! -e $DEST3
    then 
        mkdir $DEST3
    fi

    cp ../test/*.py $DEST2
fi

# Create Links for Examples (local)
if test ! -e build
then
    mkdir build
fi
cd build
if test ! -e Examples
then
    mkdir Examples
    ln -s $CASSIOPEE/Cassiopee/Transform/test Examples/Transform
fi
cd ..

# Build html
touch source/*.rst
sphinx-build -b html ./source ./build
if ([ $PRODUCTION -eq 1 ])
then
# Build pdf
    sphinx-build -b latex ./source ./build
    cd build
    pdflatex Transform >& /dev/null
    cd ..
fi

# Copie dans le DEST
if ([ $PRODUCTION -eq 1 ])
then
    sed -i 's/Transform.Transform/Transform/g' build/Transform.html
    cp build/Transform.html $DEST
    cp build/Transform.pdf $DEST
fi

# Copie des release Notes
if ([ $PRODUCTION -eq 1 ])
then
    version=`grep -e __version__ ../Transform/Transform.py`
    version1=${version:15:4}
    version1=${version1/"'"/""}
    v='Transform-'$version1'.txt'
    cp Transform.txt $DEST3/$v
fi
